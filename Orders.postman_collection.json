{
	"info": {
		"_postman_id": "07377129-5167-430f-acb6-27a70c80edce",
		"name": "Orders",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "All Orders",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "907e36f1-e7fc-411d-9ea1-b36f68fb1cfc",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response to be an array\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.length > 0).to.be.true;",
							"    pm.environment.set(\"orderId\", jsonData[0]._id);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/order",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Order by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f56586e-85e3-4cf5-b070-12debc621bed",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.user).to.eql(\"alain\");",
							"    pm.expect(jsonData.tacos.length).to.eql(2);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/order/{{orderId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"order",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Invalid Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7ddf957d-2850-479f-8043-96d60ee176a7",
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eql(\"not found\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/order/5dbd6704678f33b1168cccce",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"order",
						"5dbd6704678f33b1168cccce"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "75bd6cc2-9aae-4bd6-967d-96aa7f69eb86",
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201,202]);",
							"});",
							"",
							"",
							"var schema = {",
							"  \"_id\": {",
							"    \"type\": \"number\"",
							"  },",
							"  \"tacos\": {",
							"      \"type\": \"array\"",
							"  },",
							"  \"user\": {",
							"      \"type\": \"string\"",
							"  },",
							"  \"notes\": {",
							"      \"type\": \"string\"",
							"  }",
							"};",
							"",
							"pm.test(\"Response is valid\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(tv4.validate(jsonData, schema)).to.be.true;",
							"    pm.environment.set(\"orderId\", jsonData._id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"tacos\": [\n\t\t{\n\t\t\t\"tacoId\": \"aguacate\",\n\t\t\t\"amount\": 1\n\t\t},\n\t\t{\n\t\t\t\"tacoId\": \"pato\",\n\t\t\t\"amount\": 3\n\t\t}\n\t],\n\t\"user\": \"Angel\",\n\t\"notes\": \"Los de pato con guacamole\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/order",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Invalid Order",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": ""
				}
			},
			"response": []
		},
		{
			"name": "Update Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "54cb8e5a-1df8-417d-b4e6-9bc75d53fd1f",
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"tacos\": [\n            {\n                \"tacoId\": \"pastor\",\n                \"amount\": 5\n            }\n        ],\n        \"user\": \"alain\",\n        \"notes\": \"Ya solo quiero 5 de pastor\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/order/{{orderId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"order",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Invalid Order",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"tacos\": [\n        {\n            \"tacoId\": \"pastor\",\n            \"amount\": 5\n        }\n    ],\n    \"user\": \"alain\",\n    \"notes\": \"Ya solo quiero 5 de pastor\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/api/order/5dbd6704678f33b1168cccce",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"order",
						"5dbd6704678f33b1168cccce"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Order",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "99157dc3-ead5-4b2c-8817-a2ed9dbfc9e6",
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200,204]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/order/{{orderId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"order",
						"{{orderId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Invalid Order",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/api/order/5dbd6704678f33b1168cccce",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"api",
						"order",
						"5dbd6704678f33b1168cccce"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}